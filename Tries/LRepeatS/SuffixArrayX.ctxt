#BlueJ class context
comment0.params=text
comment0.target=SuffixArrayX(java.lang.String)
comment0.text=\r\n\ Initializes\ a\ suffix\ array\ for\ the\ given\ {@code\ text}\ string.\r\n\ @param\ text\ the\ input\ string\r\n
comment1.params=lo\ hi\ d
comment1.target=void\ sort(int,\ int,\ int)
comment10.params=query
comment10.target=int\ rank(java.lang.String)
comment10.text=\r\n\ Returns\ the\ number\ of\ suffixes\ strictly\ less\ than\ the\ {@code\ query}\ string.\r\n\ We\ note\ that\ {@code\ rank(select(i))}\ equals\ {@code\ i}\ for\ each\ {@code\ i}\r\n\ between\ 0\ and\ <em>n</em>-1.\ \r\n\ @param\ query\ the\ query\ string\r\n\ @return\ the\ number\ of\ suffixes\ strictly\ less\ than\ {@code\ query}\r\n
comment11.params=query\ i
comment11.target=int\ compare(java.lang.String,\ int)
comment12.params=args
comment12.target=void\ main(java.lang.String[])
comment12.text=\r\n\ Unit\ tests\ the\ {@code\ SuffixArrayx}\ data\ type.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
comment2.params=lo\ hi\ d
comment2.target=void\ insertion(int,\ int,\ int)
comment3.params=i\ j\ d
comment3.target=boolean\ less(int,\ int,\ int)
comment4.params=i\ j
comment4.target=void\ exch(int,\ int)
comment5.params=
comment5.target=int\ length()
comment5.text=\r\n\ Returns\ the\ length\ of\ the\ input\ string.\r\n\ @return\ the\ length\ of\ the\ input\ string\r\n
comment6.params=i
comment6.target=int\ index(int)
comment6.text=\r\n\ Returns\ the\ index\ into\ the\ original\ string\ of\ the\ <em>i</em>th\ smallest\ suffix.\r\n\ That\ is,\ {@code\ text.substring(sa.index(i))}\ is\ the\ <em>i</em>\ smallest\ suffix.\r\n\ @param\ i\ an\ integer\ between\ 0\ and\ <em>n</em>-1\r\n\ @return\ the\ index\ into\ the\ original\ string\ of\ the\ <em>i</em>th\ smallest\ suffix\r\n\ @throws\ java.lang.IllegalArgumentException\ unless\ {@code\ 0\ <\=i\ <\ n}\r\n
comment7.params=i
comment7.target=int\ lcp(int)
comment7.text=\r\n\ Returns\ the\ length\ of\ the\ longest\ common\ prefix\ of\ the\ <em>i</em>th\r\n\ smallest\ suffix\ and\ the\ <em>i</em>-1st\ smallest\ suffix.\r\n\ @param\ i\ an\ integer\ between\ 1\ and\ <em>n</em>-1\r\n\ @return\ the\ length\ of\ the\ longest\ common\ prefix\ of\ the\ <em>i</em>th\r\n\ smallest\ suffix\ and\ the\ <em>i</em>-1st\ smallest\ suffix.\r\n\ @throws\ java.lang.IllegalArgumentException\ unless\ {@code\ 1\ <\=\ i\ <\ n}\r\n
comment8.params=i\ j
comment8.target=int\ lcp(int,\ int)
comment9.params=i
comment9.target=java.lang.String\ select(int)
comment9.text=\r\n\ Returns\ the\ <em>i</em>th\ smallest\ suffix\ as\ a\ string.\r\n\ @param\ i\ the\ index\r\n\ @return\ the\ <em>i</em>\ smallest\ suffix\ as\ a\ string\r\n\ @throws\ java.lang.IllegalArgumentException\ unless\ {@code\ 0\ <\=\ i\ <\ n}\r\n
numComments=13
